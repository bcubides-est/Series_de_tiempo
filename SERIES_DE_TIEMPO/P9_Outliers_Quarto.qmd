---
title: "Outliers e Intervención"
author: "Brayan Cubides"
toc: true
toc-location: right
toc-depth: 2
#number-sections: true
code-tools: true
lightbox: true
self-contained: false
---

```{r setup, fig.width=20, fig.height=5, out.width="100%", include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## Outliers en Modelos ARIMA

Vamos a considerar el análisis de outliers para modelos ARIMA o SARIMA.

La base fundamental del análisis de outliers se basa en en análisis de intervención. Vamos a empezar con unos ejercicios de simulación. La librería base es tsoutliers.

```{r, echo=TRUE, results='hide', message=FALSE, warning=FALSE}
library(tsoutliers)
library(forecast)
```

```{r simulación aditivo, fig.width=20, fig.height=5, out.width="100%" }
###### Simulación Outlier aditivo

set.seed(12)
n=200
serie=arima.sim(n=n,list(ar=(0.5))) #Se genera un AR(1)
serie2=serie
serie2[50]=serie2[50]-6 #En el dato 50, se le quitan 6 unidades para volverlo un outlier

par(mfrow=c(1,2))
plot(serie,ylim=c(-3,6),main="Serie original")
plot(serie2,ylim=c(-3,6),main="Outlier aditivo")
```

Después de simular un outlier aditivo en el tiempo $t=50$ con impacto de 6, basada en una serie que proviene de de un modelo AR con $\phi=0.5$.

En seguida vamos ajustar los modelos a las series con y sin outlier vía el procedimiento automático.

```{r ajuste de dos modelo, fig.width=20, fig.height=5, out.width="100%"}
auto.arima(serie2)###Ajuste para el modelo con outlier
#Se observa que cambió la estimación por no tener en cuenta el dato atípico para modelar
auto.arima(serie)###Ajuste para el modelo sin outlier 
fit= arima(serie2,order=c(1,0,0),include.mean = F)
fit
resi= residuals(fit)
plot(resi)
#Se observa en la gráfica de los residuales el efecto de no tener en cuenta los datos típicos
```

Note que el residual correspodiente a la observación 50 es bastante grande.

## Detección de outliers: procedimiento automático

```{r detección automática de outliers, fig.width=20, fig.height=5, out.width="100%" }
coef= coefs2poly(fit)
coef
outliers= tsoutliers::locate.outliers(resi,coef) #Inidca el tipo de dato atípico, la posición y su efecto.
outliers###tstat se compara con C=3
# ?tso####Detección automática de outliers, donde el modelo que se propone es via auto.arima
tso(serie2) #Otra forma de ver el efecto de los outliers. Pero no lo tiene en cuenta para calcular el coeficiente
```

## Simulación Outlier cambio de nivel

```{r Cambio de nivel, fig.width=20, fig.height=5, out.width="100%"}
set.seed(12)
n=500
serie=arima.sim(n=n,list(ar=0.3))
serie2=serie
serie2[100:n]=serie2[100:n]+4 #A partir del dato 100, se mete un cambio de nivel de impactó 4
par(mfrow=c(1,2))
plot(serie,ylim=c(-3,7),main="Serie original")
plot(serie2,ylim=c(-3,7),ylab="Serie")
plot(serie2,ylim=c(-3,7),main="Outlier cambio de nivel")
```

```{r Ajuste cambio de nivel, fig.width=20, fig.height=5, out.width="100%"}
fit= Arima(serie2,order=c(1,0,0),include.mean = F)
fit # Se ve el apalancamiento
acf(serie2) #El apalancamiento fue tan grande que hace que la serie parezca estacional, cuando no es estacionaria
resi= residuals(fit)
coef= coefs2poly(fit)
outliers= locate.outliers(resi,coef,cval=5)###cval=3.5 por defecto
outliers
xreg = outliers.effects(outliers, n) #Es la intervención que creabamos en el punto anterior, genera una variable escalón
head(xreg); tail(xreg)
#tso(serie2)
#salida_tso=tso(y=serie2,types=c("LS"))
#plot(salida_tso$yadj)####Esta serie es sin el efecto de los outliers
#plot(tso(y=serie2,types=c("LS")))
#tso(y=serie2,xreg=xreg,tsmethod="arima",args.tsmethod=list(include.mean=FALSE,order=c(1,0,0)))#####Yo especifico el modelo

fit_2=Arima(serie2,order=c(1,0,0),xreg=xreg,include.mean = F)
resi_2= residuals(fit_2)
coef_2= coefs2poly(fit_2)
outliers_2= locate.outliers(resi_2,coef_2,cval=3.5)###cval=3.5 por defecto
outliers_2 #Verifico que se haya solucionado el problem de los outliers
####Hay que repetir el análisis de residuales del modelo.
```

## Pronóstico con outliers

Para el pronóstico, debo tener en cuenta los valores futuros de la variable de intervención.

```{r ajuste y creación de la variablde intervención para pronóstico, fig.width=20, fig.height=5, out.width="100%"}
##### Pronóstico 
#fit= Arima(serie2,order=c(1,0,0),include.mean = F)
fit2= Arima(serie2,order=c(1,0,0),include.mean = F,xreg=xreg)
#pronostico=  forecast(object=fit,h=15)  #4.093698                      
regresoras=c(rep(1,15))
pronostico_out=forecast(object=fit2,xreg=regresoras,h=15) 
#par(mfrow=c(1,2))
#plot(pronostico,ylim=c(-3,7))
plot(pronostico_out,ylim=c(-3,7)) ###Note la reducción en la varianza de las predicciones 

#plot(pronostico$residuals,ylim=c(-3,5))
plot(pronostico_out$residuals,ylim=c(-3,5))  

#El prónostico ya tuvo en cuenta el dato atípico
```

## Ejemplo Serie de Pasajeros

```{r, echo=TRUE, results='hide', message=FALSE, warning=FALSE}
library(lmtest)
```

```{r Pasajeros, fig.width=20, fig.height=5, out.width="100%"}

data("AirPassengers")
plot(AirPassengers)
serie <- AirPassengers
ajuste=Arima(serie,order=c(0,1,1),seasonal = list(order = c(0, 1, 1)),include.mean=F,lambda =0 )
# lambda = 0 le añade el logaritmo a la serie
resi= residuals(ajuste)
plot(resi)
coef= coefs2poly(ajuste)
outliers= locate.outliers(resi,coef)
outliers
n=length(serie)
xreg = outliers.effects(outliers,n ) 
head(xreg); tail(xreg)

###El siguiente procedimiento busca que al ajustar, en el modelo con el efecto de los outliers, se busquen si hay mas outliers.
analisis=Arima(serie,order=c(0,1,1),seasonal = list(order = c(0, 1, 1)),include.mean=F,lambda =0 ,xreg=xreg) #xreg contiene las tres dummies aditivas
analisis
coeftest(analisis)
resi_analisis= residuals(analisis)
coef_analisis= coefs2poly(analisis)
outliers_analisis= locate.outliers(resi_analisis,coef_analisis)
outliers_analisis # Verficar outliers, me aparece un nuevo otlier de cambio de nivel
xreg_analisis = outliers.effects(outliers_analisis,n )
####Se pone "AO" en types porque en la localización de outliers únicamente encontró aditivos. Se incluye los efectos de los outliers, así que ahora encontró un outlier cambio de nivel en el tiempo 54.  
total_outliers=cbind(xreg,xreg_analisis)
analisis_final=Arima(serie,order=c(0,1,1),seasonal = list(order = c(0, 1, 1)),include.mean=F,lambda =0 ,xreg=total_outliers)
analisis_final
coeftest(analisis_final) # Como todos los outliers son significativos se dejan todos
resi_final= residuals(analisis_final)
coef_final= coefs2poly(analisis_final)
outliers_final= locate.outliers(resi_final,coef_final)
outliers_final
###No se encontraron mas outliers
###Verificar los supuestos del modelo.

```

```{r Pronóstico, fig.width=20, fig.height=5, out.width="100%"}
###Creación de las variable de intervención
pasos_adel=12
num_outliers=dim(total_outliers)[2]
regresoras_aditivos=matrix(c(rep(0,pasos_adel*(num_outliers-1))),pasos_adel,num_outliers-1)
regresoras_LS=matrix(c(rep(1,pasos_adel)),pasos_adel,1)
regresoras=cbind(regresoras_aditivos,regresoras_LS)
colnames(regresoras)=colnames(total_outliers)

pronostico_out=forecast(object=analisis_final,xreg=regresoras,h=pasos_adel) 
pronostico_out
plot(pronostico_out)

#Primero se ajusta el modelo y después se busca outliers
```
